// <auto-generated />
using System;
using Air3550.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Air3550.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20210415172956_t2")]
    partial class t2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("Air3550.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address2")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.Property<int>("ZipCode")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Air3550.Models.Airport", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("Air3550.Models.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Arrival")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Departure")
                        .HasColumnType("TEXT");

                    b.Property<string>("DestinationAirportName")
                        .HasColumnType("TEXT");

                    b.Property<int>("Distance")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PlaneModel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SourceAirportName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DestinationAirportName");

                    b.HasIndex("PlaneModel");

                    b.HasIndex("SourceAirportName");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("Air3550.Models.Plane", b =>
                {
                    b.Property<int>("Model")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Capacity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Model");

                    b.ToTable("Planes");
                });

            modelBuilder.Entity("Air3550.Models.SystemInfo", b =>
                {
                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FlightsGeneratedTill")
                        .HasColumnType("TEXT");

                    b.HasKey("Type");

                    b.ToTable("SystemInfos");
                });

            modelBuilder.Entity("Air3550.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FlightId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Pasword")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserInfoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.HasIndex("UserInfoId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Air3550.Models.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AddressId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("CreditCard")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("Air3550.Models.Flight", b =>
                {
                    b.HasOne("Air3550.Models.Airport", "DestinationAirport")
                        .WithMany()
                        .HasForeignKey("DestinationAirportName");

                    b.HasOne("Air3550.Models.Plane", "Plane")
                        .WithMany()
                        .HasForeignKey("PlaneModel");

                    b.HasOne("Air3550.Models.Airport", "SourceAirport")
                        .WithMany()
                        .HasForeignKey("SourceAirportName");

                    b.Navigation("DestinationAirport");

                    b.Navigation("Plane");

                    b.Navigation("SourceAirport");
                });

            modelBuilder.Entity("Air3550.Models.User", b =>
                {
                    b.HasOne("Air3550.Models.Flight", null)
                        .WithMany("Passengers")
                        .HasForeignKey("FlightId");

                    b.HasOne("Air3550.Models.UserInfo", "UserInfo")
                        .WithMany()
                        .HasForeignKey("UserInfoId");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("Air3550.Models.UserInfo", b =>
                {
                    b.HasOne("Air3550.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Air3550.Models.Flight", b =>
                {
                    b.Navigation("Passengers");
                });
#pragma warning restore 612, 618
        }
    }
}
